ggsave(plot = .,
filename = paste(figures_dir, 'expression_averages.png', sep = '/'),
width = 18, height = 6, units = 'cm',
pointsize = 1)
document()
load_all()
# pairwise similarity
similarity <- member_similarity(multi_data$GSE34150$data)
head(similarity)
?melt
document()
load_all()
# pairwise similarity
similarity <- member_similarity(multi_data$GSE34150$data)
similarity %>%
head()
similarity %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
load_all()
# pairwise similarity
similarity <- member_similarity(multi_data$GSE34150$data)
similarity %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
# pairwise similarity
similarity <- member_similarity(t(mat))
similarity %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
boxplot(mat)
boxplot(mat)
# pairwise similarity
similarity <- member_similarity((mat))
similarity %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
# t similarity measures
# calculate the similarity measures
mat <- multi_data$GSE34150$data
mat[mat < 0] <- 0
mat <- log(mat + 1)
sim <- list()
sim$Adjacency <- adjacency(mat, power = 5)
sim$TOM <- TOMsimilarity(sim$Adjacency)
attr(sim$TOM, 'dimnames') <- attr(sim$Adjacency, 'dimnames')
sim$Pearson <- cor(mat)
(melt(sim) %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = L1)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
)
load_all()
# pairwise similarity
similarity <- member_similarity(multi_data$GSE34150$data)
similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure')
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical')
(plot_grid(similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = L1)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure'),
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical'),
labels = 'AUTO',
label_size = 10,
label_fontface = 'plain',
nrow = 1,
scale = .9))
(plot_grid(similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure'),
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical'),
labels = 'AUTO',
label_size = 10,
label_fontface = 'plain',
nrow = 1,
scale = .9))
(plot_grid(similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure'),
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical'),
labels = 'AUTO',
label_size = 10,
label_fontface = 'plain',
nrow = 1,
scale = .9))
(plot_grid(similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure'),
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical'),
labels = 'AUTO',
label_size = 10,
label_fontface = 'plain',
nrow = 1,
scale = .9))
dev.off()
dev.off()
(plot_grid(similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure'),
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical'),
labels = 'AUTO',
label_size = 10,
label_fontface = 'plain',
nrow = 1,
scale = .9))
(plot_grid(similarity %>%
filter(abs(value) < 1) %>%
ggplot(aes(x = abs(value), color = measure)) +
stat_ecdf() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'vertical') +
labs(y = 'CDF',
x = 'Correlation',
color = 'Measure'),
importance %>%
ggplot(aes(x=degree, y=betweenness, size = hub)) +
geom_point() +
labs(x = 'Degree Centrality',
y = 'Betweenness Centrality',
size = 'Hub Score') +
scale_size_continuous(breaks = c(0, .5, 1)) +
theme_bw() +
theme(legend.position = 'top', legend.direction = 'vertical'),
labels = 'AUTO',
label_size = 10,
label_fontface = 'plain',
nrow = 1,
scale = .9)) %>%
ggsave(plot = .,
filename = paste(figures_dir, 'similarity_centrality.png', sep = '/'),
width = 18, height = 12, units = 'cm')
?modulePreservation
# module preservation
multi_color <- net$merged_colors
names(multi_color) <- colnames(multi_data$GSE34150$data)
multi_color <- list(GSE34150 = multi_color)
allowWGCNAThreads(3)
module_preserv <- modulePreservation(multiData = multi_data,
multiColor = multi_color,
nPermutations = 10)
(module_preserv$quality$observed$ref.GSE34150[-1] %>%
map(rownames_to_column, var = 'color') %>%
bind_rows(.id = 'gse') %>%
mutate(gse = str_split(gse, '\\.', simplify = TRUE)[, 2]) %>%
ggplot(aes(x = moduleSize, y = medianRank.qual, color = color)) +
geom_point() +
facet_wrap(~gse, nrow = 1) +
theme_bw() +
scale_color_manual(values = c('blue', 'gold', 'grey', 'turquoise')) +
theme(legend.position = 'top') +
labs(x = 'Module Size', y = 'Preservation Median Rank', color = '') +
guides(color = guide_legend(nrow = 1)))
(module_preserv$quality$Z$ref.GSE34150[-1] %>%
map(rownames_to_column, var = 'color') %>%
bind_rows(.id = 'gse') %>%
mutate(gse = str_split(gse, '\\.', simplify = TRUE)[, 2]) %>%
ggplot(aes(x = moduleSize, y = Zsummary.qual, color = color)) +
geom_point() +
geom_abline(intercept = c(2,5), slope = 0, lty = 2) +
theme_bw() +
scale_color_manual(values = c('blue', 'gold', 'grey', 'turquoise')) +
theme(legend.position = 'top') +
facet_wrap(~gse, nrow = 1) +
labs(x = 'Module Size', y = 'Preservation Z Summary', color = '') +
guides(color = guide_legend(nrow = 1)))
(module_preserv$quality$observed$ref.GSE34150[-1] %>%
map(rownames_to_column, var = 'color') %>%
bind_rows(.id = 'gse') %>%
mutate(gse = str_split(gse, '\\.', simplify = TRUE)[, 2]) %>%
ggplot(aes(x = moduleSize, y = medianRank.qual, color = color)) +
geom_point() +
facet_wrap(~gse, nrow = 1) +
theme_bw() +
scale_color_manual(values = c('blue', 'gold', 'grey', 'turquoise')) +
theme(legend.position = 'top') +
labs(x = 'Module Size', y = 'Preservation Median Rank', color = '') +
guides(color = guide_legend(nrow = 1))) %>%
ggsave(plot = .,
filename = paste(figures_dir, 'preservation_ranks.png', sep = '/'),
width = 18, height = 9, units = 'cm',
pointsize = 9)
(module_preserv$quality$Z$ref.GSE34150[-1] %>%
map(rownames_to_column, var = 'color') %>%
bind_rows(.id = 'gse') %>%
mutate(gse = str_split(gse, '\\.', simplify = TRUE)[, 2]) %>%
ggplot(aes(x = moduleSize, y = Zsummary.qual, color = color)) +
geom_point() +
geom_abline(intercept = c(2,5), slope = 0, lty = 2) +
theme_bw() +
scale_color_manual(values = c('blue', 'gold', 'grey', 'turquoise')) +
theme(legend.position = 'top') +
facet_wrap(~gse, nrow = 1) +
labs(x = 'Module Size', y = 'Preservation Z Summary', color = '') +
guides(color = guide_legend(nrow = 1))) %>%
ggsave(plot = .,
filename = paste(figures_dir, 'preservation_zsummary.png', sep = '/'),
width = 18, height = 9, units = 'cm')
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
head()
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
head()
library(ggraph)
library(tidygraph)
library(ggraph)
library(tidygraph)
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
head()
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
left_join(dplyr::select(ann, symbol, category) %>%
unique() %>%
setNames(c('name', 'Gene'))) %>%
filter(color != 'grey') %>%
filter(!name %in% c('Atg5', 'Cln3', 'Zc3h12a')) %>%
with(
map(c('blue', 'turquoise'), function(x) {
filter(., color == x) %>%
ggraph(layout = 'kk') +
geom_edge_link(aes(color = Interaction)) +
geom_node_point(size = 5, aes(color = Gene)) +
scale_color_manual(values = c('green', 'gray')) +
scale_edge_color_manual(values = c('lightgray', 'red')) +
geom_node_text(aes(label = name), color = 'royalblue') +
theme_graph() +
theme(legend.position = 'top',
legend.direction = 'vertical')
})
)
set.seed(12345)
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
left_join(dplyr::select(ann, symbol, category) %>%
unique() %>%
setNames(c('name', 'Gene'))) %>%
filter(color != 'grey') %>%
filter(!name %in% c('Atg5', 'Cln3', 'Zc3h12a')) %>%
with(
map(c('blue', 'turquoise'), function(x) {
filter(., color == x) %>%
ggraph(layout = 'kk') +
geom_edge_link(aes(color = Interaction)) +
geom_node_point(size = 5, aes(color = Gene)) +
scale_color_manual(values = c('green', 'gray')) +
scale_edge_color_manual(values = c('lightgray', 'red')) +
geom_node_text(aes(label = name), color = 'royalblue') +
theme_graph() +
theme(legend.position = 'top',
legend.direction = 'vertical')
})
)
(mutate(interactions, Interaction = 'STRING') %>%
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
left_join(dplyr::select(ann, symbol, category) %>%
unique() %>%
setNames(c('name', 'Gene'))) %>%
filter(color != 'grey') %>%
filter(!name %in% c('Atg5', 'Cln3', 'Zc3h12a')) %>%
with(
map(c('blue', 'turquoise'), function(x) {
filter(., color == x) %>%
ggraph(layout = 'kk') +
geom_edge_link(aes(color = Interaction)) +
geom_node_point(size = 5, aes(color = Gene)) +
scale_color_manual(values = c('green', 'gray')) +
scale_edge_color_manual(values = c('lightgray', 'red')) +
geom_node_text(aes(label = name), color = 'royalblue') +
theme_graph() +
theme(legend.position = 'top',
legend.direction = 'vertical')
})
)
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
left_join(dplyr::select(ann, symbol, category) %>%
unique() %>%
setNames(c('name', 'Gene'))) %>%
filter(color != 'grey') %>%
filter(!name %in% c('Atg5', 'Cln3', 'Zc3h12a')) %>%
with(
map(c('blue', 'turquoise'), function(x) {
filter(., color == x) %>%
ggraph(layout = 'kk') +
geom_edge_link(aes(color = Interaction)) +
geom_node_point(size = 5, aes(color = Gene)) +
scale_color_manual(values = c('green', 'gray')) +
scale_edge_color_manual(values = c('lightgray', 'red')) +
geom_node_text(aes(label = name), color = 'royalblue') +
theme_graph() +
theme(legend.position = 'top',
legend.direction = 'vertical')
})
) %>%
plot_grid(plotlist = .,
labels = 'AUTO',
label_size = 12,
label_fontface = 'plain'))
mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
left_join(dplyr::select(ann, symbol, category) %>%
unique() %>%
setNames(c('name', 'Gene'))) %>%
filter(color != 'grey') %>%
filter(!name %in% c('Atg5', 'Cln3', 'Zc3h12a')) %>%
with(
map(c('blue', 'turquoise'), function(x) {
filter(., color == x) %>%
ggraph(layout = 'kk') +
geom_edge_link(aes(color = Interaction)) +
geom_node_point(size = 5, aes(color = Gene)) +
scale_color_manual(values = c('green', 'gray')) +
scale_edge_color_manual(values = c('lightgray', 'red')) +
geom_node_text(aes(label = name), color = 'royalblue') +
theme_graph() +
theme(legend.position = 'top',
legend.direction = 'vertical')
})
) %>%
plot_grid(plotlist = .,
labels = 'AUTO',
label_size = 12,
label_fontface = 'plain')
(mutate(interactions, Interaction = 'STRING') %>%
right_join(networks) %>%
mutate(Interaction = ifelse(is.na(Interaction), 'Novel', Interaction)) %>%
as_tbl_graph() %>%
left_join(gene$df, by = c('name' = 'symbol')) %>%
left_join(dplyr::select(ann, symbol, category) %>%
unique() %>%
setNames(c('name', 'Gene'))) %>%
filter(color != 'grey') %>%
filter(!name %in% c('Atg5', 'Cln3', 'Zc3h12a')) %>%
with(
map(c('blue', 'turquoise'), function(x) {
filter(., color == x) %>%
ggraph(layout = 'kk') +
geom_edge_link(aes(color = Interaction)) +
geom_node_point(size = 5, aes(color = Gene)) +
scale_color_manual(values = c('green', 'gray')) +
scale_edge_color_manual(values = c('lightgray', 'red')) +
geom_node_text(aes(label = name), color = 'royalblue') +
theme_graph() +
theme(legend.position = 'top',
legend.direction = 'vertical')
})
) %>%
plot_grid(plotlist = .,
labels = 'AUTO',
label_size = 12,
label_fontface = 'plain')) %>%
ggsave(plot = .,
filename = paste(figures_dir, 'module_networks.png', sep = '/'),
width = 30, height = 20, units = 'cm',
pointsize = 7)
check()
check()
document()
check()
